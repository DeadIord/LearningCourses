@using Microsoft.AspNetCore.Identity
@inject UserManager<ApplicationUser> _userManager
@inject RoleManager<IdentityRole> _roleManager

@model IEnumerable<ApplicationUser>
@{
    ViewBag.Title = "Все пользователи";

}
<h1>Все пользователи</h1>
<style>
    .text-truncate {
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
        display: inline-block;
        max-width: 100%;
    }
</style>

<form method="get" class="d-flex align-items-center">
    
    <div class="input-group">
        <select class="form-select form-control" name="roleName">
            <option value="">Все роли</option>
            @foreach (var role in _roleManager.Roles)
            {
                <option value="@role.Name">@role.Name</option>
            }
        </select>
        <button type="submit" class="btn btn-sm btn-outline-primary">Применить фильтр</button>
    </div>
</form>

<div class="row">
    @foreach (var user in Model)
    {
        <div class="col-md-6  mt-5">
            <div class="card p-3 d-flex flex-column align-items-start">
                <div class="d-flex align-items-center">
                    <div class="image">
                        @if (user.ProfilePicture != null)
                        {
                            <img id="profilePicture" class="rounded" style="width: 120px; height: 120px;" src="data:image/*;base64,@(Convert.ToBase64String(user.ProfilePicture))">
                        }
                        else
                        {
                            <img id="profilePicture" src="https://img.icons8.com/bubbles/100/000000/user.png" class="rounded" style="width: 120px; height: 120px;" alt="User-Profile-Image">
                        }
                    </div>

                    <div class="ml-3 w-100">
                        <div class="card-content">
                            @{
                                string fullName = $"{user.Surname} {user.Name} {user.Patronymic}";
                                string truncatedFullName = fullName.Length > 22 ? $"{fullName.Substring(0, 22)}..." : fullName;
                            }
                            <h4 class="mb-0 mt-0" title="@fullName">@truncatedFullName</h4>
                        </div>
                        <span>@user.Email</span>

                        <div class="p-2 mt-2 bg-primary d-flex justify-content-between rounded text-white stats">
                            <div class="d-flex flex-column">
                                <span class="number1">
                                    @if (User.Identity.IsAuthenticated)
                                    {
                                        var roles = await _userManager.GetRolesAsync(user);
                                        <text>@string.Join(", ", roles)</text>
                                    }
                                    else
                                    {
                                        <text>Неавторизованный пользователь</text>
                                    }
                                </span>
                            </div>
                        </div>
                        <div class="button mt-2 d-flex flex-row justify-content-between align-items-center">
                            <form asp-action="DeleteUser" asp-route-id="@user.Id" method="post">
                                <a asp-action="EditUser" asp-controller="User" asp-route-id="@user.Id" class="btn btn-sm btn-outline-primary">Изменить</a>
                                <button type="submit" class="btn btn-sm btn-primary ml-2"
                                        onclick="return confirm('Вы уверены что хотите удалить данного пользователя: @user.Name @user.Surname')">
                                    Удалить
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>
<script>
    function TruncateString(text, maxLength) {
        if (text.length > maxLength) {
            return text.substring(0, maxLength) + "...";
        }
        return text;
    }
</script>